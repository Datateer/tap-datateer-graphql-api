[tool.poetry]
name = "tap-datateer-graphql-api"
version = "0.3.0"
description = "`tap-datateer-graphql-api` is a Singer tap for DatateerGraphqlApi, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Datateer Development <dev@datateer.com>"]
keywords = [
    "ELT",
    "DatateerGraphqlApi",
]
license = "Apache-2.0"
packages = [
    { include = "tap_datateer_graphql_api" },
]

[tool.poetry.dependencies]
python = ">=3.7.1,<4"
singer-sdk = { version="~=0.32.0" }
fs-s3fs = { version = "~=1.1.1", optional = true }
requests = "~=2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
singer-sdk = { version="~=0.32.0", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true

[tool.ruff]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
]
select = ["ALL"]
src = ["tap_datateer_graphql_api"]
target-version = "py37"


[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["tap_datateer_graphql_api"]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-datateer-graphql-api = 'tap_datateer_graphql_api.tap:TapDatateerGraphqlApi.cli'


[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version",]
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
